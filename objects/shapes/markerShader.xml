<?xml version="1.0" encoding="utf-8"?>

<CustomShader version="5">
    <Parameters>
        <Parameter name="scaleParameters" target="scaleParameters" type="float4" defaultValue="0.75 1.0 2.5 1.0" />
        <Parameter name="color" target="color" type="float4" defaultValue="1.0 1.0 1.0 1.0" minValue="0.0 0.0 0.0 0.0" maxValue="1.0 1.0 1.0 1.0" />
        <Parameter name="alpha" target="alpha" type="float" group="base" defaultValue="1.0" minValue="0.0" maxValue="1.0" />
        <Parameter name="uvOffset" target="uvOffset" type="float2" group="base" defaultValue="0.0 0.0" minValue="0.0 0.0" maxValue="1.0 1.0 1.0 1.0" />
    </Parameters>
    <UvUsages />
    <Textures />
    <VertexAttributes />
    <Variations>
        <Variation name="SCALING">
<![CDATA[
    #define SCALING 
]]>
        </Variation>
        <Variation name="PULSATING">
<![CDATA[
    #define PULSATING 
]]>
        </Variation>
    </Variations>
    <LodLevel startDistance="0">
        <CodeInjections>
            <CodeInjection position="FS_GLOBALS">
<![CDATA[
    float2 gUVs;
    float4 gEmissive;
]]>
            </CodeInjection>
            <CodeInjection position="POST_GET_WORLD_POSE_VS">
<![CDATA[
{
    float3 camToPos = float3(instance.modelMatrix[0][3], instance.modelMatrix[1][3], instance.modelMatrix[2][3]);
    float3 upVector = float3(instance.modelMatrix[0][1], instance.modelMatrix[1][1], instance.modelMatrix[2][1]);
    float3 sideVector = normalize(cross(camToPos, upVector));
    sideVector *= length(float3(instance.modelMatrix[0][0], instance.modelMatrix[1][0], instance.modelMatrix[2][0]));
    worldPosition = sideVector*In.position.x + upVector*In.position.y + camToPos;
}
]]>
            </CodeInjection>
            <CodeInjection position="CONFIG_DEFINES">
<![CDATA[
    #if defined(ALPHA_BLENDED)
        #undef FOG_INSCATTERING
    #endif
]]>
            </CodeInjection>
            <CodeInjection position="OBJECT_PARAMETERS">
<![CDATA[
    float4 scaleParameters;
    float4 color;
    float alpha;
    float4 uvOffset;
]]>
            </CodeInjection>
            <CodeInjection position="GET_POSITION_VS">
<![CDATA[
    float3   mPosition = In.position.xyz;
	
#if defined( SCALING )    
    float    mSpeed         = object.scaleParameters.x * cTime_s;
    float    mAlpha         = mSpeed - floor( mSpeed ); // 0..1
    mPosition = mPosition.xyz * lerp( object.scaleParameters.y, object.scaleParameters.z, mAlpha );
#endif

    return   mPosition.xyz;
]]>
            </CodeInjection>
            <CodeInjection position="POST_SET_TEXCOORDS_VS">
<![CDATA[
    #if defined(ALBEDO_MAP) || defined(EMISSIVE_MAP)
        float2 uv = getDefaultTexCoords(In, instance, object);
        // Continuous Motion
        uv.xy += object.uvOffset.xy;
        Out.defaultTexCoords = uv;
    #endif
]]>
            </CodeInjection>
            <CodeInjection position="POST_GLOSS_COLOR_FS">
<![CDATA[
    #if defined( SPECULAR ) && defined( ALPHA_BLENDED )
        #undef SPECULAR
    #endif
]]>
            </CodeInjection>
            <CodeInjection position="EMISSIVE_FS">
<![CDATA[
	emissiveColor.rgb = object.color.rgb * object.color.a * alpha * object.alpha;
]]>
			</CodeInjection>
            <CodeInjection position="ALPHA_FS">
<![CDATA[
    #if defined( SCALING ) || defined( PULSATING )
        float    mSpeed         = object.scaleParameters.x * cTime_s;
        float    mAlpha         = mSpeed - floor( mSpeed ); // 0..1
        float    mAttuniation   = 1 - abs( 2 * mAlpha - 1 );
    #endif
    #if defined( SCALING )     
        alpha *= mAttuniation;
    #endif
    #if defined( PULSATING )  
        alpha = lerp (alpha, alpha*2, mAttuniation);
    #endif
]]>
            </CodeInjection>
            <CodeInjection position="FINAL_POS_FS">
<![CDATA[
    #if defined(ALPHA_BLENDED)
        oColor.a = 0.0; // additive blending
    #endif
]]>
            </CodeInjection>
        </CodeInjections>
    </LodLevel>
</CustomShader>